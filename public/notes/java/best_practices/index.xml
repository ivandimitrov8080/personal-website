<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Best_practices on Ivan Dimitrov</title><link>https://ivandimitrov.co.uk/notes/java/best_practices/</link><description>Recent content in Best_practices on Ivan Dimitrov</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Sep 2022 15:20:32 +0000</lastBuildDate><atom:link href="https://ivandimitrov.co.uk/notes/java/best_practices/index.xml" rel="self" type="application/rss+xml"/><item><title>One_thing</title><link>https://ivandimitrov.co.uk/notes/java/best_practices/one_thing/</link><pubDate>Sat, 03 Sep 2022 15:19:47 +0000</pubDate><guid>https://ivandimitrov.co.uk/notes/java/best_practices/one_thing/</guid><description>Object Oriented Programming has a set principles called SOLID. Baeldung has an article on them .
What I want to talk about here is the Single Responsibility Principle. That&amp;rsquo;s the S in SOLID.
As we might expect, this principle states that a class should only have one responsibility. Furthermore, it should only have one reason to change.
I had a discussion about this on some code I was reviewing. These are some CR comments.</description></item></channel></rss>